//------------------------------------------------------------------------------
// <auto-generated>
//    Este código se generó a partir de una plantilla.
//
//    Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//    Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
namespace VideoTienda.Models
{
    #region Contextos
    
    /// <summary>
    /// No hay documentación de metadatos disponible.
    /// </summary>
    public partial class Contexto : ObjectContext
    {
        #region Constructores
    
        /// <summary>
        /// Inicializa un nuevo objeto Contexto usando la cadena de conexión encontrada en la sección 'Contexto' del archivo de configuración de la aplicación.
        /// </summary>
        public Contexto() : base("name=Contexto", "Contexto")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Inicializar un nuevo objeto Contexto.
        /// </summary>
        public Contexto(string connectionString) : base(connectionString, "Contexto")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Inicializar un nuevo objeto Contexto.
        /// </summary>
        public Contexto(EntityConnection connection) : base(connection, "Contexto")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Métodos parciales
    
        partial void OnContextCreated();
    
        #endregion
    
        #region Propiedades de ObjectSet
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        public ObjectSet<Pelicula> PeliculaConjunto
        {
            get
            {
                if ((_PeliculaConjunto == null))
                {
                    _PeliculaConjunto = base.CreateObjectSet<Pelicula>("PeliculaConjunto");
                }
                return _PeliculaConjunto;
            }
        }
        private ObjectSet<Pelicula> _PeliculaConjunto;
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        public ObjectSet<Parte> ParteConjunto
        {
            get
            {
                if ((_ParteConjunto == null))
                {
                    _ParteConjunto = base.CreateObjectSet<Parte>("ParteConjunto");
                }
                return _ParteConjunto;
            }
        }
        private ObjectSet<Parte> _ParteConjunto;
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        public ObjectSet<Cinta> CintaConjunto
        {
            get
            {
                if ((_CintaConjunto == null))
                {
                    _CintaConjunto = base.CreateObjectSet<Cinta>("CintaConjunto");
                }
                return _CintaConjunto;
            }
        }
        private ObjectSet<Cinta> _CintaConjunto;
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        public ObjectSet<Categoria> CategoriaConjunto
        {
            get
            {
                if ((_CategoriaConjunto == null))
                {
                    _CategoriaConjunto = base.CreateObjectSet<Categoria>("CategoriaConjunto");
                }
                return _CategoriaConjunto;
            }
        }
        private ObjectSet<Categoria> _CategoriaConjunto;
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        public ObjectSet<Actor> Actores
        {
            get
            {
                if ((_Actores == null))
                {
                    _Actores = base.CreateObjectSet<Actor>("Actores");
                }
                return _Actores;
            }
        }
        private ObjectSet<Actor> _Actores;
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        public ObjectSet<Socio> Socios
        {
            get
            {
                if ((_Socios == null))
                {
                    _Socios = base.CreateObjectSet<Socio>("Socios");
                }
                return _Socios;
            }
        }
        private ObjectSet<Socio> _Socios;

        #endregion

        #region Métodos AddTo
    
        /// <summary>
        /// Método desusado para agregar un nuevo objeto al EntitySet PeliculaConjunto. Considere la posibilidad de usar el método .Add de la propiedad ObjectSet&lt;T&gt; asociada.
        /// </summary>
        public void AddToPeliculaConjunto(Pelicula pelicula)
        {
            base.AddObject("PeliculaConjunto", pelicula);
        }
    
        /// <summary>
        /// Método desusado para agregar un nuevo objeto al EntitySet ParteConjunto. Considere la posibilidad de usar el método .Add de la propiedad ObjectSet&lt;T&gt; asociada.
        /// </summary>
        public void AddToParteConjunto(Parte parte)
        {
            base.AddObject("ParteConjunto", parte);
        }
    
        /// <summary>
        /// Método desusado para agregar un nuevo objeto al EntitySet CintaConjunto. Considere la posibilidad de usar el método .Add de la propiedad ObjectSet&lt;T&gt; asociada.
        /// </summary>
        public void AddToCintaConjunto(Cinta cinta)
        {
            base.AddObject("CintaConjunto", cinta);
        }
    
        /// <summary>
        /// Método desusado para agregar un nuevo objeto al EntitySet CategoriaConjunto. Considere la posibilidad de usar el método .Add de la propiedad ObjectSet&lt;T&gt; asociada.
        /// </summary>
        public void AddToCategoriaConjunto(Categoria categoria)
        {
            base.AddObject("CategoriaConjunto", categoria);
        }
    
        /// <summary>
        /// Método desusado para agregar un nuevo objeto al EntitySet Actores. Considere la posibilidad de usar el método .Add de la propiedad ObjectSet&lt;T&gt; asociada.
        /// </summary>
        public void AddToActores(Actor actor)
        {
            base.AddObject("Actores", actor);
        }
    
        /// <summary>
        /// Método desusado para agregar un nuevo objeto al EntitySet Socios. Considere la posibilidad de usar el método .Add de la propiedad ObjectSet&lt;T&gt; asociada.
        /// </summary>
        public void AddToSocios(Socio socio)
        {
            base.AddObject("Socios", socio);
        }

        #endregion

    }

    #endregion

    #region Entidades
    
    /// <summary>
    /// No hay documentación de metadatos disponible.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Modelo", Name="Actor")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Actor : EntityObject
    {
        #region Método de generador
    
        /// <summary>
        /// Crear un nuevo objeto Actor.
        /// </summary>
        /// <param name="id">Valor inicial de la propiedad Id.</param>
        /// <param name="nombre">Valor inicial de la propiedad Nombre.</param>
        /// <param name="fechaNacimiento">Valor inicial de la propiedad FechaNacimiento.</param>
        public static Actor CreateActor(global::System.Int32 id, global::System.String nombre, global::System.DateTime fechaNacimiento)
        {
            Actor actor = new Actor();
            actor.Id = id;
            actor.Nombre = nombre;
            actor.FechaNacimiento = fechaNacimiento;
            return actor;
        }

        #endregion

        #region Propiedades simples
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Nombre
        {
            get
            {
                return _Nombre;
            }
            set
            {
                OnNombreChanging(value);
                ReportPropertyChanging("Nombre");
                _Nombre = StructuralObject.SetValidValue(value, false, "Nombre");
                ReportPropertyChanged("Nombre");
                OnNombreChanged();
            }
        }
        private global::System.String _Nombre;
        partial void OnNombreChanging(global::System.String value);
        partial void OnNombreChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime FechaNacimiento
        {
            get
            {
                return _FechaNacimiento;
            }
            set
            {
                OnFechaNacimientoChanging(value);
                ReportPropertyChanging("FechaNacimiento");
                _FechaNacimiento = StructuralObject.SetValidValue(value, "FechaNacimiento");
                ReportPropertyChanged("FechaNacimiento");
                OnFechaNacimientoChanged();
            }
        }
        private global::System.DateTime _FechaNacimiento;
        partial void OnFechaNacimientoChanging(global::System.DateTime value);
        partial void OnFechaNacimientoChanged();

        #endregion

    }
    
    /// <summary>
    /// No hay documentación de metadatos disponible.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Modelo", Name="Categoria")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Categoria : EntityObject
    {
        #region Método de generador
    
        /// <summary>
        /// Crear un nuevo objeto Categoria.
        /// </summary>
        /// <param name="nombre">Valor inicial de la propiedad Nombre.</param>
        public static Categoria CreateCategoria(global::System.String nombre)
        {
            Categoria categoria = new Categoria();
            categoria.Nombre = nombre;
            return categoria;
        }

        #endregion

        #region Propiedades simples
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Nombre
        {
            get
            {
                return _Nombre;
            }
            set
            {
                if (_Nombre != value)
                {
                    OnNombreChanging(value);
                    ReportPropertyChanging("Nombre");
                    _Nombre = StructuralObject.SetValidValue(value, false, "Nombre");
                    ReportPropertyChanged("Nombre");
                    OnNombreChanged();
                }
            }
        }
        private global::System.String _Nombre;
        partial void OnNombreChanging(global::System.String value);
        partial void OnNombreChanged();

        #endregion

    }
    
    /// <summary>
    /// No hay documentación de metadatos disponible.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Modelo", Name="Cinta")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Cinta : EntityObject
    {
        #region Método de generador
    
        /// <summary>
        /// Crear un nuevo objeto Cinta.
        /// </summary>
        /// <param name="id">Valor inicial de la propiedad Id.</param>
        /// <param name="formato">Valor inicial de la propiedad Formato.</param>
        public static Cinta CreateCinta(global::System.Int32 id, global::System.String formato)
        {
            Cinta cinta = new Cinta();
            cinta.Id = id;
            cinta.Formato = formato;
            return cinta;
        }

        #endregion

        #region Propiedades simples
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Formato
        {
            get
            {
                return _Formato;
            }
            set
            {
                OnFormatoChanging(value);
                ReportPropertyChanging("Formato");
                _Formato = StructuralObject.SetValidValue(value, false, "Formato");
                ReportPropertyChanged("Formato");
                OnFormatoChanged();
            }
        }
        private global::System.String _Formato;
        partial void OnFormatoChanging(global::System.String value);
        partial void OnFormatoChanged();

        #endregion

    }
    
    /// <summary>
    /// No hay documentación de metadatos disponible.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Modelo", Name="Parte")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Parte : EntityObject
    {
        #region Método de generador
    
        /// <summary>
        /// Crear un nuevo objeto Parte.
        /// </summary>
        /// <param name="consecutivo">Valor inicial de la propiedad Consecutivo.</param>
        public static Parte CreateParte(global::System.Int32 consecutivo)
        {
            Parte parte = new Parte();
            parte.Consecutivo = consecutivo;
            return parte;
        }

        #endregion

        #region Propiedades simples
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Consecutivo
        {
            get
            {
                return _Consecutivo;
            }
            set
            {
                if (_Consecutivo != value)
                {
                    OnConsecutivoChanging(value);
                    ReportPropertyChanging("Consecutivo");
                    _Consecutivo = StructuralObject.SetValidValue(value, "Consecutivo");
                    ReportPropertyChanged("Consecutivo");
                    OnConsecutivoChanged();
                }
            }
        }
        private global::System.Int32 _Consecutivo;
        partial void OnConsecutivoChanging(global::System.Int32 value);
        partial void OnConsecutivoChanged();

        #endregion

    }
    
    /// <summary>
    /// No hay documentación de metadatos disponible.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Modelo", Name="Pelicula")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Pelicula : EntityObject
    {
        #region Método de generador
    
        /// <summary>
        /// Crear un nuevo objeto Pelicula.
        /// </summary>
        /// <param name="id">Valor inicial de la propiedad Id.</param>
        /// <param name="titulo">Valor inicial de la propiedad Titulo.</param>
        public static Pelicula CreatePelicula(global::System.Int32 id, global::System.String titulo)
        {
            Pelicula pelicula = new Pelicula();
            pelicula.Id = id;
            pelicula.Titulo = titulo;
            return pelicula;
        }

        #endregion

        #region Propiedades simples
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Titulo
        {
            get
            {
                return _Titulo;
            }
            set
            {
                OnTituloChanging(value);
                ReportPropertyChanging("Titulo");
                _Titulo = StructuralObject.SetValidValue(value, false, "Titulo");
                ReportPropertyChanged("Titulo");
                OnTituloChanged();
            }
        }
        private global::System.String _Titulo;
        partial void OnTituloChanging(global::System.String value);
        partial void OnTituloChanged();

        #endregion

    }
    
    /// <summary>
    /// No hay documentación de metadatos disponible.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Modelo", Name="Socio")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Socio : EntityObject
    {
        #region Método de generador
    
        /// <summary>
        /// Crear un nuevo objeto Socio.
        /// </summary>
        /// <param name="id">Valor inicial de la propiedad Id.</param>
        /// <param name="nombreCompleto">Valor inicial de la propiedad NombreCompleto.</param>
        public static Socio CreateSocio(global::System.Int32 id, NombreCompleto nombreCompleto)
        {
            Socio socio = new Socio();
            socio.Id = id;
            socio.NombreCompleto = StructuralObject.VerifyComplexObjectIsNotNull(nombreCompleto, "NombreCompleto");
            return socio;
        }

        #endregion

        #region Propiedades simples
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();

        #endregion

        #region Propiedades complejas
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmComplexPropertyAttribute()]
        [DesignerSerializationVisibility(DesignerSerializationVisibility.Content)]
        [XmlElement(IsNullable=true)]
        [SoapElement(IsNullable=true)]
        [DataMemberAttribute()]
        public NombreCompleto NombreCompleto
        {
            get
            {
                _NombreCompleto = GetValidValue(_NombreCompleto, "NombreCompleto", false, _NombreCompletoInitialized);
                _NombreCompletoInitialized = true;
                return _NombreCompleto;
            }
            set
            {
                OnNombreCompletoChanging(value);
                ReportPropertyChanging("NombreCompleto");
                _NombreCompleto = SetValidValue(_NombreCompleto, value, "NombreCompleto");
                _NombreCompletoInitialized = true;
                ReportPropertyChanged("NombreCompleto");
                OnNombreCompletoChanged();
            }
        }
        private NombreCompleto _NombreCompleto;
        private bool _NombreCompletoInitialized;
        partial void OnNombreCompletoChanging(NombreCompleto value);
        partial void OnNombreCompletoChanged();

        #endregion

    }

    #endregion

    #region ComplexTypes
    
    /// <summary>
    /// No hay documentación de metadatos disponible.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="Modelo", Name="NombreCompleto")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class NombreCompleto : ComplexObject
    {
        #region Método de generador
    
        /// <summary>
        /// Crear un nuevo objeto NombreCompleto.
        /// </summary>
        /// <param name="nombres">Valor inicial de la propiedad Nombres.</param>
        /// <param name="apellidos">Valor inicial de la propiedad Apellidos.</param>
        public static NombreCompleto CreateNombreCompleto(global::System.String nombres, global::System.String apellidos)
        {
            NombreCompleto nombreCompleto = new NombreCompleto();
            nombreCompleto.Nombres = nombres;
            nombreCompleto.Apellidos = apellidos;
            return nombreCompleto;
        }

        #endregion

        #region Propiedades simples
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Nombres
        {
            get
            {
                return _Nombres;
            }
            set
            {
                OnNombresChanging(value);
                ReportPropertyChanging("Nombres");
                _Nombres = StructuralObject.SetValidValue(value, false, "Nombres");
                ReportPropertyChanged("Nombres");
                OnNombresChanged();
            }
        }
        private global::System.String _Nombres;
        partial void OnNombresChanging(global::System.String value);
        partial void OnNombresChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Apellidos
        {
            get
            {
                return _Apellidos;
            }
            set
            {
                OnApellidosChanging(value);
                ReportPropertyChanging("Apellidos");
                _Apellidos = StructuralObject.SetValidValue(value, false, "Apellidos");
                ReportPropertyChanged("Apellidos");
                OnApellidosChanged();
            }
        }
        private global::System.String _Apellidos;
        partial void OnApellidosChanging(global::System.String value);
        partial void OnApellidosChanged();

        #endregion

    }

    #endregion

}
